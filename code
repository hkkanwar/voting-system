#Harsimran Kanwar
#April 6 2018
#This program is designed to simulate a voting system.
#Users will be asked to enter the number of candidates running
#and input all the votes into the system 
#The application will calculate the votes and display the
#results in percentages of each candidate.
#Users may press 0 at any time to quit

#asking user for input
candidate= int(input("How many candidates are running in the election?"))
vote_input = int(input("Please provide vote#"))

#in order to use colour
import colors
#creating array to store results
total_votes =[] 
#if user wishes to quit instantly
if (vote_input == 0): 
  print(colors.magenta(" Goodbye! Have a nice day!")) 

else:
  j=0 
  #program will run till user inputs zero. Zero will quit the program and display results of what has been inputed
  while vote_input !=0 : 
    if (vote_input > candidate): 
      print(colors.red("try again"))
      vote_input = int(input("'please provide vote#"))
    else:
       total_votes.append(vote_input) 
       vote_input = int(input("'please provide vote#"))
       
  j+= 1 
  total_votes.sort() #sorting the votes for each candidate

#function to check if a tie occured
def checktie(d1):
  #reversing dictionary to find matching values
  reverse_dic = {}
  for k, v in d1.items():
        reverse_dic[v] = reverse_dic.get(v, [])
        reverse_dic[v].append(k)
  return reverse_dic

#creating new dictionary to calculate and store percentages of votes
d = {}
i=1 
for p in total_votes:
    #using counter function to calculate number of votes per candidate
    from collections import Counter 
    c=Counter(total_votes)
    if i <= candidate:
      percentage=int(c[i]/len(total_votes)*100.0)
      d.update({i:percentage})
    i+= 1

#displaying results in descending order
sorted_keys = sorted(d, key=d.get, reverse=True) 

#displaying results of election
for key in sorted_keys:
    print ("Candidate", key, "has", d[key], "% of the votes")   

#calling function to check for tie between winning Candidate    
newd = checktie(d)

#finding max value in order to determine who won
w =max([i for i in newd.keys()])

#distinguishing between win or tie for 1st place 
if len(newd[w])>1:
  print ("The winner of the election is tied between Candidates", newd[w], "with", w, "% of votes!")
else:
  print ("The winner of the election is Candidate", newd[w], "with", w, "% of votes!!")
print (colors.green("Thank you! Have a good day!!!"))
